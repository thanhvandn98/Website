{"_id":"note:VIgPHTlKN","title":"ES6 Noting","content":"ES6 Note\n```js\nconst person = \n{\n\tname: \"Mosh\",\n\twalk()\n\t{\n\t\tconsole.log(this);\n\t}\n};\nperson.walk();\nconst walk = person.walk;\nwalk();  (2)\n```\n\n- \"This\" is determind by how a function is called\n- Call function as method in a object => return a reference to that object (for example: person.walk();)\n- Call function as standalone object or outside object => return window object (global object in browser). Strict mode is enable by default (mode to execute Js in more protective way) (2)\n\nFix\n```js\nconst = walk = person.walk.bind(person);\nwalk();\n```\n\n- Bind a function to object\n- \"person\" is determind by value of \"this\"\n\n- When calling a function as a standalone function outside of a object by default will return the window object (undefined in strict mode)\n\n- https://codelearn.io/sharing/bind-call-va-apply-trong-javascript\n\n#Convert ES6 + Array map .map()\n- Transform each element to array\n- Defination : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\n- https://toidicodedao.com/2016/03/08/series-javascript-sida-bind-call-va-apply-trong-javascript/\n- https://kipalog.com/posts/PHAN-BIET-CALL--APPLY-VA-BIND-TRONG-JAVASCRIPT\n```js\nconst color = ['red', 'green', 'blue'];\n\n//JS old way\nconst item = color.map(function(color){\n    return '<li>' + color + '</li>';\n}); \n\n//ES6 new way\nconst item = color.map(color =>'<li>' + color + '</li>');\nconst item = color.map(color => `<li>${color}</li>`);\n                       \n```\n#Object Destructuring\n```js\n//Old way\nconst street = address.street;\nconst city = address.city;\nconst country = address.country;\n\n//New way\nconst {street, city, country} = address;\n//Both is same way to express that method\n//const {street: st} = address; define const in different name\n```\n\n#Spread operator\n```js\nconst first = [1, 2, 3];\nconst second = [4, 5, 6];\n\n//Old way\nconst combined = first.concat(second);\n\n//New way\nconst combined = [...first, 'a', ...second, 'b'];\n//This new method we can easily add elements in that method\n\n//Clone array\nconst clone = [...first];\n```\n\n#Classes & Inheritance\n- https://viblo.asia/p/class-va-constructor-function-trong-javascript-gAm5yBjXKdb\n```js\nclass Person //Every first letter of every word should uppercase\n{\n    constructor(name)\n    {\n        this.name = name;\n    }\n    walk()\n    {\n        console.log(\"walk\");\n    }\n}\nconst person = new Person();\n\nclass Teacher extends Person\n{\n    constructor(name, degree)\n    {\n        super(name);\n        this.degree = degree;\n    }\n    teach()\n    {\n        console.log(\"teach\");\n    }\n}\nconst teacher = new Teacher(\"Mosh\", \"MSC\");\n```\n\n#Modules\n- Default -> import ... from '';\n- Named -> import {...} from '';\n- https://viblo.asia/p/tim-hieu-cach-su-dung-super-trong-javascript-qua-vi-du-YWOZrxAr5Q0\n- \n","tags":[],"folderPathname":"/","data":{},"createdAt":"2020-10-21T09:30:49.182Z","updatedAt":"2020-10-22T09:19:30.775Z","trashed":false,"_rev":"gUrUOGb0C"}