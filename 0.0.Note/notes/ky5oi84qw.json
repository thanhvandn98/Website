{"_id":"note:ky5oi84qw","title":"Higher order functions & arrays","content":"```js\nconst companies= [\n  {name: \"Company One\", category: \"Finance\", start: 1981, end: 2004},\n  {name: \"Company Two\", category: \"Retail\", start: 1992, end: 2008},\n  {name: \"Company Three\", category: \"Auto\", start: 1999, end: 2007},\n  {name: \"Company Four\", category: \"Retail\", start: 1989, end: 2010},\n  {name: \"Company Five\", category: \"Technology\", start: 2009, end: 2014},\n  {name: \"Company Six\", category: \"Finance\", start: 1987, end: 2010},\n  {name: \"Company Seven\", category: \"Auto\", start: 1986, end: 1996},\n  {name: \"Company Eight\", category: \"Technology\", start: 2011, end: 2016},\n  {name: \"Company Nine\", category: \"Retail\", start: 1981, end: 1989}\n];\n\nconst ages = [33, 12, 20, 16, 5, 54, 21, 44, 61, 13, 15, 45, 25, 64, 32];\n\n// for(let i = 0; i < companies.length; i++) {\n//   console.log(companies[i]);\n// }\n\n// forEach\n\n// companies.forEach(function(company) {\n//   console.log(company.name);\n// });\n\n// filter\n\n// Get 21 and older\n\n// let canDrink = [];\n// for(let i = 0; i < ages.length; i++) {\n//   if(ages[i] >= 21) {\n//     canDrink.push(ages[i]);\n//   }\n// }\n\n// const canDrink = ages.filter(function(age) {\n//   if(age >= 21) {\n//     return true;\n//   }\n// });\n\nconst canDrink = ages.filter(age => age >= 21);\n\n// Filter retail companies\n\n// const retailCompanies = companies.filter(function(company) {\n//   if(company.category === 'Retail') {\n//     return true;\n//   }\n// });\n\nconst retailCompanies = companies.filter(company => company.category === 'Retail');\n\n// Get 80s companies\n\nconst eightiesCompanies = companies.filter(company => (company.start >= 1980 && company.start < 1990));\n\n// Get companies that lasted 10 years or more\n\nconst lastedTenYears = companies.filter(company => (company.end - company.start >= 10));\n\n// map\n\n// Create array of company names\n// const companyNames = companies.map(function(company) {\n//   return company.name;\n// });\n\n// const testMap = companies.map(function(company) {\n//   return `${company.name} [${company.start} - ${company.end}]`;\n// });\n\n// const testMap = companies.map(company => `${company.name} [${company.start} - ${company.end}]`);\n\n// const ageMap = ages\n//   .map(age => Math.sqrt(age))\n//   .map(age => age * 2);\n\n\n\n// sort\n\n// Sort companies by start year\n\n// const sortedCompanies  = companies.sort(function(c1, c2) {\n//   if(c1.start > c2.start) {\n//     return 1;\n//   } else {\n//     return -1;\n//   }\n// });\n\n// const sortedCompanies = companies.sort((a, b) => (a.start > b.start ? 1 : -1));\n\n// Sort ages\n// const sortAges = ages.sort((a, b) => a - b);\n\n// console.log(sortAges);\n\n\n// reduce\n\n// let ageSum = 0;\n// for(let i = 0; i < ages.length; i++) {\n//   ageSum += ages[i];\n// }\n\n// const ageSum = ages.reduce(function(total, age) {\n//   return total + age;\n// }, 0);\n\n// const ageSum = ages.reduce((total, age) => total + age, 0);\n\n// Get total years for all companies\n\n// const totalYears = companies.reduce(function(total, company) {\n//   return total + (company.end - company.start);\n// }, 0);\n\nconst totalYears = companies.reduce((total, company) => total + (company.end - company.start), 0);\n\n// Combine Methods\n\nconst combined = ages\n  .map(age => age * 2)\n  .filter(age => age >= 40)\n  .sort((a, b) => a - b)\n  .reduce((a, b) => a + b, 0);\n\nconsole.log(combined);\n\n```","tags":[],"folderPathname":"/","data":{},"createdAt":"2020-10-23T19:18:01.497Z","updatedAt":"2020-10-23T19:18:25.678Z","trashed":false,"_rev":"EcKd-Wdcr"}